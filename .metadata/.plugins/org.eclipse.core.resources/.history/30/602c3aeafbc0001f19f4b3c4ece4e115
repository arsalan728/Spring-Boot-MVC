package com.springboot.service;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.springboot.entity.ProductEntity;
import com.springboot.model.ProductModel;
import com.springboot.repository.ProductRepository;

@Service
public class ProductService {
    @Autowired
    private ProductRepository productRepository;

    public void saveProductDetails(ProductModel productModel) {
        // Calculate derived values
        double stockValue = productModel.getPrice() * productModel.getQuantity();
        double discountPrice = productModel.getPrice() * productModel.getDiscountRate() / 100;
        double offerPrice = productModel.getPrice() - discountPrice;
        double taxRate = 18.00;
        double finalPrice = offerPrice + (offerPrice * taxRate) / 100;

        // Map ProductModel to ProductEntity
        ProductEntity productEntity = new ProductEntity();
        productEntity.setName(productModel.getName());
        productEntity.setBrand(productModel.getBrand());
        productEntity.setMadeIn(productModel.getMadeIn());
        productEntity.setPrice(productModel.getPrice());
        productEntity.setQuantity(productModel.getQuantity());
        productEntity.setDiscountRate(productModel.getDiscountRate());
        productEntity.setDiscountPrice(discountPrice);
        productEntity.setOfferPrice(offerPrice);
        productEntity.setFinalPrice(finalPrice);
        productEntity.setStockRate(stockValue);

        // Save to repository
        productRepository.save(productEntity);
       
    }
    public List<ProductEntity>getAllProducts(){
    	List<ProductEntity>products=productRepository.findAll();
    	return products;
    }
	public ProductEntity searchById(Long id) {
		Optional<ProductEntity>optionalData=productRepository.findById(id);
		if(optionalData.isPresent()) {
			ProductEntity products=optionalData.get();
			return products;
		}
		else
		{
		return null;
	}
	
	}
	public  void deleteProductById(long id) {
		// TODO Auto-generated method stub
		productRepository.deleteById(id);
	}
	}
